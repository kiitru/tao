<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-03-05 at 15:00:23.
 */
/**
 * @codeCoverageIgnore
 */
class Object_Listener_for_Test extends Object_Aggregator
{
	public function func_for_test_call($args)
	{
		return $args;
	}
}

class For_Test1
{
}

class Object_ListenerTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Object_Listener
     */
    protected $object;
    protected $object_with_type;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Object_Listener;
        $this->object_with_type = new Object_Listener('Object_Listener_for_Test',array(new Object_Listener_for_Test));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Object_Listener::append
     * @todo   Implement testAppend().
     */
    public function testAppend()
    {
		$this->object->append(new For_Test1);
		$this->object_with_type->append(new Object_Listener_for_Test);
    }

	/**
	 * @expectedException Core_InvalidArgumentTypeException
	 */
	public function testAppendFailure()
	{
		$this->object_with_type->append(new For_Test1);
	}
	
    /**
     * @covers Object_Listener::__call
     * @todo   Implement test__call().
     */
    public function test__call()
    {
		$param = 'aaaa';
		$this->assertInstanceOf('Object_Listener',$this->object_with_type->func_for_test_call($param));
    }
}
